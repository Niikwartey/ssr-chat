{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/deriq/Desktop/challenges/better-chat/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Grommet } from 'grommet';\nimport fetch from 'isomorphic-unfetch';\nimport ChatRoom from '../components/ChatRoom';\n\nfunction App() {\n  return __jsx(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(Grommet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(ChatRoom, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  })));\n}\n\nApp.getInitialProps = function _callee() {\n  var usersRequest, postsRequest, users, posts;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          usersRequest = fetch('/api/users');\n          postsRequest = fetch('/api/posts'); // \"await\" requests after initializing all requests for better performance.\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(usersRequest);\n\n        case 4:\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(postsRequest);\n\n        case 6:\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(usersRequest.json());\n\n        case 8:\n          users = _context.sent;\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(postsRequest.json());\n\n        case 11:\n          posts = _context.sent;\n          console.log(users, posts);\n          return _context.abrupt(\"return\", {\n            users: users,\n            posts: posts\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/deriq/Desktop/challenges/better-chat/pages/index.js"],"names":["Grommet","fetch","ChatRoom","App","getInitialProps","usersRequest","postsRequest","json","users","posts","console","log"],"mappings":";;;;AAAA,SAASA,OAAT,QAAwB,SAAxB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,SAASC,GAAT,GAAe;AACb,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD;;AAEDA,GAAG,CAACC,eAAJ,GAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,UAAAA,YADc,GACCJ,KAAK,CAAC,YAAD,CADN;AAEdK,UAAAA,YAFc,GAECL,KAAK,CAAC,YAAD,CAFN,EAIpB;;AAJoB;AAAA,2CAKdI,YALc;;AAAA;AAAA;AAAA,2CAMdC,YANc;;AAAA;AAAA;AAAA,2CAQAD,YAAY,CAACE,IAAb,EARA;;AAAA;AAQdC,UAAAA,KARc;AAAA;AAAA,2CASAF,YAAY,CAACC,IAAb,EATA;;AAAA;AASdE,UAAAA,KATc;AAUpBC,UAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmBC,KAAnB;AAVoB,2CAWb;AAAED,YAAAA,KAAK,EAALA,KAAF;AAASC,YAAAA,KAAK,EAALA;AAAT,WAXa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;AAeA,eAAeN,GAAf","sourcesContent":["import { Grommet } from 'grommet';\nimport fetch from 'isomorphic-unfetch';\nimport ChatRoom from '../components/ChatRoom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Grommet>\n        <ChatRoom />\n      </Grommet>\n    </div>\n  );\n}\n\nApp.getInitialProps = async function() {\n  const usersRequest = fetch('/api/users');\n  const postsRequest = fetch('/api/posts');\n  \n  // \"await\" requests after initializing all requests for better performance.\n  await usersRequest; \n  await postsRequest;\n\n  const users = await usersRequest.json();\n  const posts = await postsRequest.json();\n  console.log(users, posts);\n  return { users, posts };\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}