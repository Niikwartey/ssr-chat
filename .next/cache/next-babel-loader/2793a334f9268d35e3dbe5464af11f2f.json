{"ast":null,"code":"var _jsxFileName = \"/Users/deriq/Desktop/challenges/better-chat/components/TimeAgo/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport moment from 'moment';\n\nfunction TimeAgo(_ref) {\n  var timestamp = _ref.timestamp;\n  var initialTimeAgo = moment(timestamp).fromNow();\n\n  var _useState = useState(initialTimeAgo),\n      timeAgo = _useState[0],\n      setTimeAgo = _useState[1];\n\n  var updateTimeAgo = function updateTimeAgo() {\n    var newTimeAgo = moment(timestamp).fromNow();\n    console.log(newTimeAgo);\n    if (newTimeAgo !== timeAgo) setTimeAgo(newTimeAgo);\n  };\n\n  setInterval(updateTimeAgo, 30000);\n  return __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, timeAgo);\n}\n\nexport default TimeAgo;","map":{"version":3,"sources":["/Users/deriq/Desktop/challenges/better-chat/components/TimeAgo/index.js"],"names":["useState","moment","TimeAgo","timestamp","initialTimeAgo","fromNow","timeAgo","setTimeAgo","updateTimeAgo","newTimeAgo","console","log","setInterval"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAGA,SAASC,OAAT,OAA8B;AAAA,MAAZC,SAAY,QAAZA,SAAY;AAC5B,MAAMC,cAAc,GAAGH,MAAM,CAACE,SAAD,CAAN,CAAkBE,OAAlB,EAAvB;;AAD4B,kBAEEL,QAAQ,CAACI,cAAD,CAFV;AAAA,MAErBE,OAFqB;AAAA,MAEZC,UAFY;;AAI5B,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,QAAMC,UAAU,GAAGR,MAAM,CAACE,SAAD,CAAN,CAAkBE,OAAlB,EAAnB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,QAAGA,UAAU,KAAKH,OAAlB,EAA2BC,UAAU,CAACE,UAAD,CAAV;AAC5B,GAJD;;AAMDG,EAAAA,WAAW,CAACJ,aAAD,EAAgB,KAAhB,CAAX;AAEC,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,OAAP,CAAP;AACD;;AAED,eAAeJ,OAAf","sourcesContent":["import { useState } from 'react';\nimport moment from 'moment';\n\n\nfunction TimeAgo({timestamp}) {\n  const initialTimeAgo = moment(timestamp).fromNow();\n  const [timeAgo, setTimeAgo] = useState(initialTimeAgo);\n  \n  const updateTimeAgo = () => {\n    const newTimeAgo = moment(timestamp).fromNow();\n    console.log(newTimeAgo)\n    if(newTimeAgo !== timeAgo) setTimeAgo(newTimeAgo);\n  }\n\n setInterval(updateTimeAgo, 30000);\n\n  return <span>{timeAgo}</span>\n}\n\nexport default TimeAgo;"]},"metadata":{},"sourceType":"module"}