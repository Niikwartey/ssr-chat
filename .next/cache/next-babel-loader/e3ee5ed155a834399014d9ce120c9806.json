{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport posts from '../../../seed/posts.json';\nexport default ((req, res) => {\n  if (req.method === 'POST') {\n    const lastPost = posts[posts.length - 1];\n\n    const newPost = _objectSpread({}, req.body, {\n      id: lastPost + 1\n    });\n\n    const allPosts = [...posts, newPost];\n    res.status(200).json(allPosts);\n  } else {\n    res.status(200).json(posts);\n  }\n});","map":{"version":3,"sources":["/Users/deriq/Desktop/challenges/better-chat/pages/api/posts/index.js"],"names":["posts","req","res","method","lastPost","length","newPost","body","id","allPosts","status","json"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,0BAAlB;AAEA,gBAAe,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC3B,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAMC,QAAQ,GAAGJ,KAAK,CAACA,KAAK,CAACK,MAAN,GAAc,CAAf,CAAtB;;AACA,UAAMC,OAAO,qBAAQL,GAAG,CAACM,IAAZ;AAAkBC,MAAAA,EAAE,EAAEJ,QAAQ,GAAG;AAAjC,MAAb;;AACA,UAAMK,QAAQ,GAAG,CAAC,GAAGT,KAAJ,EAAWM,OAAX,CAAjB;AAEAJ,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,QAArB;AACD,GAND,MAOK;AACHP,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBX,KAArB;AACD;AAEF,CAZD","sourcesContent":["import posts from '../../../seed/posts.json'\n\nexport default (req, res) => {\n  if (req.method === 'POST') {\n    const lastPost = posts[posts.length -1];\n    const newPost = { ...req.body, id: lastPost + 1 }\n    const allPosts = [...posts, newPost]\n\n    res.status(200).json(allPosts);\n  } \n  else {\n    res.status(200).json(posts);\n  }\n  \n}"]},"metadata":{},"sourceType":"module"}